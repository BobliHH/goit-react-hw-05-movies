{"version":3,"file":"static/js/804.25605c57.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","Routing/MovieDetails.styled.js","components/Button/Button.jsx","Routing/MovieDetails.jsx","components/FetchApi/FetchApi.jsx"],"sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: flex-start;\n  justify-content: space-between;\n  margin-bottom: 20px;\n\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  flex: 0 0 auto;\n  margin-right: 30px;\n`;\n\nexport const Image = styled.img`\n  max-height: 500px;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 10px;\n  align-self: flex-start;\n`;\n\nexport const Description = styled.div`\n  flex: 1 1 auto;\n`;\n\nexport const ProdCompany = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  margin-top: 10px;\n`;\n","import './Button.css';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ text }) => {\n  return (\n    <button className=\"Btn\" type=\"button\">\n      {text}\n    </button>\n  );\n};\nexport default Button;\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState, useRef, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\n\nimport { fetchMovieDetails } from 'components/FetchApi/FetchApi';\nimport {\n  Container,\n  Description,\n  ImageContainer,\n  Image,\n  ProdCompany,\n} from './MovieDetails.styled';\nimport Button from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    const movieDetails = async () => {\n      try {\n        const movie = await fetchMovieDetails(movieId);\n        setMovieDetails(movie);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <Loader />;\n  }\n\n  const productionCompaniesList = movieDetails.production_companies?.map(\n    ({ id, logo_path, name }) =>\n      logo_path && (\n        <li key={id}>\n          {logo_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${logo_path}`}\n              alt={name}\n              style={{\n                maxHeight: 50,\n                maxWidth: 200,\n                marginRight: 30,\n                marginTop: 10,\n              }}\n            />\n          )}\n        </li>\n      )\n  );\n\n  const roundedPopularity = Math.round(movieDetails.vote_average * 10);\n\n  return (\n    <div>\n      <Link to={backLinkHref.current}>\n        <Button text=\"Go back\" />\n      </Link>\n      <Container backdrop={movieDetails.backdrop_path}>\n        <Description>\n          <h1>{movieDetails.title}</h1>\n          <h4>User score: {roundedPopularity}%</h4>\n          <h2>Overview</h2>\n          <p>{movieDetails.overview}</p>\n          <h2>Genres</h2>\n          <p>\n            {movieDetails.genres.map(genre => (\n              <span key={genre.id}> {genre.name}</span>\n            ))}\n          </p>\n          {productionCompaniesList[0] !== null &&\n            productionCompaniesList.length > 0 && (\n              <>\n                <h2>Production companies</h2>\n                <ProdCompany>{productionCompaniesList}</ProdCompany>\n              </>\n            )}\n        </Description>\n        <ImageContainer>\n          <Image\n            src={\n              movieDetails.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n                : alert('No image')\n            }\n            alt={movieDetails.title}\n          />\n        </ImageContainer>\n      </Container>\n      <hr />\n      <h3>Additional information</h3>\n      <Link to=\"cast\">\n        <Button text=\"Cast\" />\n      </Link>\n      <Link to=\"reviews\">\n        <Button text=\"Reviews\" />\n      </Link>\n      <hr />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '68756bc19b046f0067322cfee7014e71';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};\n"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","Container","styled","ImageContainer","Image","Description","ProdCompany","text","className","type","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchMovieDetails","movie","console","error","Loader","productionCompaniesList","production_companies","map","id","logo_path","name","src","alt","style","maxHeight","maxWidth","marginRight","marginTop","roundedPopularity","Math","round","vote_average","to","current","backdrop","backdrop_path","title","overview","genres","genre","length","poster_path","alert","Suspense","fallback","axios","params","api_key","language","fetchTrendingMovies","response","data","results","handleSearch","movieName","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}