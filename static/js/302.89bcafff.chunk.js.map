{"version":3,"file":"static/js/302.89bcafff.chunk.js","mappings":"6PAIaA,EAAa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAKlC,OACE,kBAAMC,UAAU,OAAOC,SALJ,SAAAC,GACnBA,EAAEC,gBACH,EAGC,WACE,wBAAI,kBACJ,kBACEC,KAAK,OACLC,gBAAiB,IACjBP,MAAOA,EACPC,SAAU,SAAAG,GAAC,OAAIH,EAASG,EAAEI,OAAOR,MAAtB,EACXS,YAAY,gBAInB,E,SC2BD,EA1Ce,WACb,OAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,UAAY,GAC/C,GAA8BP,EAAAA,EAAAA,WAAS,GAAvC,eAAOQ,EAAP,KAAgBC,EAAhB,KAsBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAM,mCAAG,oGAEXF,GAAW,GAFA,UAGUG,EAAAA,EAAAA,IAAaN,GAHvB,OAGLO,EAHK,OAIXX,EAAiBW,GAJN,gDAMXC,QAAQC,MAAR,MANW,yBAQXN,GAAW,GARA,4EAAH,qDAWZE,GACD,GAAE,CAACL,KAGF,0BACE,4BACE,SAAC,EAAD,CAAYhB,MAAOgB,EAAWf,SAvBV,SAAAyB,GAExBX,EAD6B,KAAVW,GAAgB,CAAEA,MAAAA,GAEtC,IAqBMR,GACC,uBAAG,gBACwB,IAAzBP,EAAcgB,QAAgBX,GAChC,wBAAI,gCAEJ,SAACY,EAAA,EAAD,CAAWC,MAAOlB,QAK3B,C,8LC1CDmB,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALY,mCAMZC,SAAU,UAIDC,EAAmB,mCAAG,oGACVJ,EAAAA,EAAAA,IAAA,qBAAgCC,GADtB,cAC3BI,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRT,EAAAA,EAAAA,IAAA,iBAAoBS,GAAWR,GADvB,cACzBI,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBd,EAAY,mCAAG,WAAMN,GAAN,uFACHc,EAAAA,EAAAA,IAAA,8BAAiCd,GAAae,GAD3C,cACpBI,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,sDAKZG,EAAc,mCAAG,WAAMD,GAAN,uFACLT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,aAAuCR,GADlC,cACtBI,EADsB,yBAErBA,EAASC,KAAKK,MAFO,2CAAH,sDAKdC,EAAiB,mCAAG,WAAMH,GAAN,uFACRT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,aAAuCR,GAD/B,cACzBI,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qD,4ECC9B,EA9BkB,SAAC,GAAe,IAAbR,EAAY,EAAZA,MACbc,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAI1C,UAAU,OAAd,SACG2B,EAAMgB,KAAI,SAAAC,GAAK,OACd,eAAI5C,UAAU,WAAd,UACE,kBACEA,UAAU,cACV6C,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMP,GACfQ,MAAOL,EAAMM,YAJf,WAME,cAAGlD,UAAU,cAAc,IAAE4C,EAAMO,UAPTP,EAAME,GADtB,KAcrB,C","sources":["components/SearchForm/SearchForm.jsx","Routingx/Movies.jsx","components/FetchApi/FetchApi.jsx","components/MovieList/MovieList.jsx"],"sourcesContent":["import propTypes from 'prop-types';\n\nimport './SearchForm.css';\n\nexport const SearchForm = ({ value, onChange }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <h2>Movie Search</h2>\n      <input\n        type=\"text\"\n        debounceTimeout={500}\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        placeholder=\"type here\"\n      />\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  value: propTypes.string,\n  onChange: propTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { handleSearch } from 'components/FetchApi/FetchApi';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') || '';\n  const [loading, setLoading] = useState(false);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' && { query };\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    const search = async () => {\n      try {\n        setLoading(true);\n        const movies = await handleSearch(movieName);\n        setSearchResults(movies);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    search();\n  }, [movieName]);\n\n  return (\n    <div>\n      <div>\n        <SearchForm value={movieName} onChange={updateQueryString} />\n        {loading ? (\n          <p>Loading....</p>\n        ) : searchResults.length === 0 && movieName ? (\n          <h2>ðŸ”Ž Nothing found</h2>\n        ) : (\n          <MovieList films={searchResults} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import './FetchApi.css';\nimport axios from 'axios';\n\nconst API_KEY = '68756bc19b046f0067322cfee7014e71';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './MovieList.css';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul className=\"List\">\n      {films.map(movie => (\n        <li className=\"ListItem\" key={movie.id}>\n          <link\n            className=\"LinkDetails\"\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            cover={movie.poster_path}\n          >\n            <i className=\"LogoIcon \" /> {movie.title}\n          </link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n"],"names":["SearchForm","value","onChange","className","onSubmit","e","preventDefault","type","debounceTimeout","target","placeholder","useState","searchResults","setSearchResults","useSearchParams","searchParams","setSearchParams","movieName","get","loading","setLoading","useEffect","search","handleSearch","movies","console","error","query","length","MovieList","films","axios","params","api_key","language","fetchTrendingMovies","response","data","results","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","location","useLocation","map","movie","to","id","state","from","cover","poster_path","title"],"sourceRoot":""}