{"version":3,"file":"static/js/442.4e679663.chunk.js","mappings":"wNA+BA,UA3Ba,WACX,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEOC,EAAAA,EAAAA,MAFP,OAERC,EAFQ,OAGdJ,EAAkBI,GAHJ,gDAKdC,QAAQC,MAAR,MALc,yDAAH,qDAQfJ,GACD,GAAE,KAGD,iBAAKK,UAAU,YAAf,WACE,wBAAI,oBACJ,yBAC6B,IAA1BR,EAAeS,OACdC,MAAM,cAEN,SAAC,IAAD,CAAWC,MAAOX,QAK3B,C,8LC1BDY,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALY,mCAMZC,SAAU,UAIDX,EAAmB,mCAAG,oGACVQ,EAAAA,EAAAA,IAAA,qBAAgCC,GADtB,cAC3BG,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRR,EAAAA,EAAAA,IAAA,iBAAoBQ,GAAWP,GADvB,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBI,EAAY,mCAAG,WAAMC,GAAN,uFACHV,EAAAA,EAAAA,IAAA,8BAAiCU,GAAaT,GAD3C,cACpBG,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,sDAKZK,EAAc,mCAAG,WAAMH,GAAN,uFACLR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,aAAuCP,GADlC,cACtBG,EADsB,yBAErBA,EAASC,KAAKO,MAFO,2CAAH,sDAKdC,EAAiB,mCAAG,WAAML,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,aAAuCP,GAD/B,cACzBG,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qD,4ECC9B,EA9BkB,SAAC,GAAe,IAAbP,EAAY,EAAZA,MACbe,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAInB,UAAU,OAAd,SACGG,EAAMiB,KAAI,SAAAC,GAAK,OACd,eAAIrB,UAAU,WAAd,UACE,kBACEA,UAAU,cACVsB,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMP,GACfQ,MAAOL,EAAMM,YAJf,WAME,cAAG3B,UAAU,cAAc,IAAEqB,EAAMO,UAPTP,EAAME,GADtB,KAcrB,C","sources":["Routingx/Home.jsx","components/FetchApi/FetchApi.jsx","components/MovieList/MovieList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from 'components/FetchApi/FetchApi';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const movies = await fetchTrendingMovies();\n        setTrendingMovies(movies);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"Container\">\n      <h1>Trending today</h1>\n      <div>\n        {trendingMovies.length === 0 ? (\n          alert('No movies')\n        ) : (\n          <MovieList films={trendingMovies} />\n        )}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import './FetchApi.css';\nimport axios from 'axios';\n\nconst API_KEY = '68756bc19b046f0067322cfee7014e71';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './MovieList.css';\n\nconst MovieList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul className=\"List\">\n      {films.map(movie => (\n        <li className=\"ListItem\" key={movie.id}>\n          <link\n            className=\"LinkDetails\"\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            cover={movie.poster_path}\n          >\n            <i className=\"LogoIcon \" /> {movie.title}\n          </link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n"],"names":["useState","trendingMovies","setTrendingMovies","useEffect","fetchData","fetchTrendingMovies","movies","console","error","className","length","alert","films","axios","params","api_key","language","response","data","results","fetchMovieDetails","movieId","handleSearch","movieName","fetchMovieCast","cast","fetchMovieReviews","location","useLocation","map","movie","to","id","state","from","cover","poster_path","title"],"sourceRoot":""}